@use 'sass:meta';
@use 'sass:map';

@function is-type($data) {
  @return meta.type-of($data);
}

@function is-null($data) {
  @return is-type($data) == 'null';
}

@function is-string($data) {
  @return is-type($data) == 'string';
}

@function is-color($data) {
  @return is-type($data) == 'color';
}

@function is-number($data) {
  @return is-type($data) == 'number';
}

@function is-bool($data) {
  @return is-type($data) == 'bool';
}

@function is-list($data) {
  @return is-type($data) == 'list';
}

@function is-map($data) {
  @return is-type($data) == 'map';
}

@function is-function($get-function-value) {
  @return is-type($get-function-value) == 'function';
}

@function str-to-num($str-number, $max-number: 100) {
  $numbers: ();

  @for $n from 1 through $max-number {
    $numbers: map.set($numbers, $n + '', $n);
  }

  @if map-has-key($numbers, $str-number) {
    @return map.get($numbers, $str-number);
  } @else {
    @error 'str-to-num() 함수는 #{$max-number} 이하의 숫자형 문자 값만 처리 가능합니다.';
  }
}
